#This is so that the answers are asked in random succession
import random


#Makes a pretty banner for the user
def banner(text):
    banner = f"~+~ {text} ~+~"
    border = "~" * len(banner)
    banner = f"{border}\n{banner}\n{border}"
    return banner
text = "Promotion Board Prep"
print(banner(text))


#This is a dictionary for the test, you can edit them as you see fit, answer_key dictionary can be used for questions that do not fall under any of the chapters of the NCO guide
chapter1 = {
    "" : ""
}

chapter2 = {
    "What is the name of Chapter 2 of the NCO Handbook?" : "Be, Know, Do",
    "What are the attributes of a leader?" : "Character, Intellect, Presence",
    "What are the competencies of a leader?" : "Achieves, Develops, Leads",
    "What are the 6 NCO Core Competencies?" : "Readiness, Leadership, Training Management, Operations, Communication, Program Management",
    "What are the 5 different types of responsibities covered in Chapter 2 of the NCO Handbook" : "Command, Custodial, Direct, Personal, Supervisory",
}

chapter3 = {
    "What is the name for the 3rd chapter of the NCO guide" : "The Roadmap to Effective Leadership",
    "What are the attributes of a leader?" : "Character, Intellect, Presence",
    "What are the competencies of a leader?" : "Achieves, Develops, Leads",
    "What are the two types of infuences a leader can have?" : "Commitment, Compliance",
    "What are the two independent sources of power?" : "Postion Power, Pesonnel Power",
    "What are the six types of power?" : "Coercive, Expert, Information, Legitimate, Referent, Reward",
    "What are the different types of leadership styles?" : "Affiliative, Authoritative, Coaching, Coercive, Democratic, Pacesetting",
    "Which leadership styles promotes commitment-based following?" : "Affiliative, Authoritative, Coaching, Democratic",
    "Which leadership styles promote compliance-based following?" : "Coercive, Pacesetting",
    "What are the four consistent factors of that affect leadership?" : "The leader, The led, the situation, the communication",
    "What are the three types of duties that an NCO must accomplish?" : "Specified duties, Directed duties, Implied duties",
    "What are the three levels of leadership?" : "Direct, Organizational, Strategic",
    "What are the three different types of counselings?" : "Event counseling, Performance counseling, Professional growth counseling",
}

chapter4 = {
    "What is the name of the 4th chapter of the NCO guide?" : "Training",
    "What ADP covers training?" : "ADP 7-0",
    "What FM covers training" : "FM 7-0",
    "What are the principles of training?" : "Train as you fight, Train to standard, Train to sustain, Train to maintain",
    "What regulation covers training?" : "AR 350-1",
    "What are the training domains?" : "Institutional, Operational, Self-Development",
    "What are the three proficiencies units train?" : "Mission-essential tasks, Weapons, Collective live-fire",
    "What are the training techniques NCO's can use?" : "Lane Training, Hip-pocket training, Sergeant's time training, Training models",
}

chapter5 = {
    "What is the name of the fifth chaper of the NCO Guide" : "Mission Command",
    "How does Chapter 5 define mission command" : "The Army's approach to command and control that empowers subordinate decision making and decentralized execution appropriate to the situation",
    "What are the elements of mission command?" : "Authority, Decision making, Leadership, Responsibility",
    "What are the elements of control?" : "Communication, Direction, Feedback, Information",
    "What are the principles of mission command?" : "Competence, Mutual Trust, Shared Understanding, Commander's Intent, Mission Orders, Disciplined Initiative, Risk Acceptance",
    "What are the Troop Leading Procedures" : "Receive the Mission, Issue a warning order, Make a tentative plan, Start necessary movements, Conduct reconnaissance, Complete the plan, Issue the Operations Order, Supervise and refine",
    "What are the five paragraphs in all mission orders?" : "Situation, Mission, Execution, Sustainment, Command and Signal",
    "What are the Army's six warfighting functions?" : "Movement and Maneuver, Intelligence, Fires, Sustainment, Protection, Command and Control",
    "What tasks fall under the C2 Warfighing function" : "Command forces, Control operations, Drive the operations process, Establish the C2 system",
    "What are the components of the C2 system" : "People, Processes, Networks, Command posts",
}

chapter6 = {
    "What is the name of Chapter 6 of the NCO Guide?" : "The Army Profession",
    "What are the characteristics of the Army Profession" : "Trust, Honorable Service, Military Expertise, Stewarship of the Profession, Esprit De Corps",
    "What are the army values?" : "Loyalty, Duty, Respect, Selfless Service, Honor, Integrity, Personal Courage",
    "How many streamers are on the Army flag" : "189",
    "What are the colors of the Army flag" : "Red, White, Blue",
    "What are the senses of pride derived from?" : "Self Pride, Civic Pride, National Pride, Espirit de Corps",
    "What are the basic elements of an inspection?" : "Measure performance against a standard, Determine the magnitude of the problem, Seek the root cause of a problem, Determine a solution",
    "What are NCO's certified in that makes them Army professionals?" : "Candor, Competence, Character, Commitment, Standards",
}

#You can edit this dictionary by adding any questions that are not stated already on this
#Format = "question" : "answer" (followed by a comma for each additional question you add)
answer_key = {
    "Where do NCO's derive their power from?" : "Secretary of the Army",
    "What are the protected categories of SHARP? (Alphabetical, seperated by commas)" : "Color, National Origin, Race, Religion, Sex, Sexual Orientation",
    "How many paragraphs are in the NCO Creed?" : "3",
    "What is the FM that covers H2F?" : "FM 7-22.01",
    "What is the FM for the NCO Handbook?" : "FM 7-22.7",
    "When is the Army Birthday? (Full name of month DD YYYY)" : "June 14 1775",
    "American NCO is a blend of what Armies?" : "Great Britain, France, Prussia",
    "What is the full name of the blue book?" : "Regulation for the Order and Discipline of the Troops of the United States",
    "Who was the first Sergeant of the Army?" : "SMA Wooldridge"
}

#You can add a situational question of your own by just putting your question into quotes and adding a , after the previous sitauation
Situational_Question = [
    "Your soldier comes up to you not knowing if he wants to reenlist, how do you proceed?\n",
    "You are out with your soldier and he gets drunk, he tells you that he wants to" 
    " take a girl home who also, is drunk. How do you proceed?\n"
]

#chapters will allow the user to choose what chapters they want to review
chapters = input("What Chapters of the NCO Guide would you like to cover today?\n")
#choice will allow the user to select the number of questions they want to review
choice = int(input("How many questions would you like to do?\n"))
qNum = 1
#finalTest is a dictionary that will add the questions for each chapter the user selected in the 'chapters' variable
finalTest = {}

#iterates through the 'chapters' variable to append each chapter to finalTest
for num in chapters:
    if num == '1':
        finalTest.update(chapter1)
    elif num == '2':
        finalTest.update(chapter2)
    elif num == '3':
        finalTest.update(chapter3)
    elif num == '4':
        finalTest.update(chapter4)
    elif num == '5':
        finalTest.update(chapter5)
    elif num == '6':
        finalTest.update(chapter6)

#This is the code for the main test
count = 0
for x in range(0, choice):
    random_question = random.choice(list(finalTest))
    key = finalTest[random_question].upper()
    if ',' in key:
        key = key.split(', ')
    answer = input(f"Question {qNum}) " + random_question+"\n").upper()
    if ',' in answer:
        answer = answer.split(', ')
    if isinstance(key, list):
        if set(answer) == set(key):
            print("You got the answer correct!\n")
        else:
            print(f"The correct answer was:\n{key}\n")

    else:
        if answer == key:
                input("You got the answer right!\n")
        else:
                print("Not quite what I am looking for...")
                print("The correct answer was:", finalTest[random_question]+"\n")
        
    qNum = int(qNum)
    qNum += 1

#This will ask the user a random situational question at the end of the written question portion
sitQues = random.choice(Situational_Question)
input(sitQues)
